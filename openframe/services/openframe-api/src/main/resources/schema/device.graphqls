extend type Query {
    deviceFilters(filter: DeviceFilterInput): DeviceFilters!

    devices(
        filter: DeviceFilterInput
        pagination: CursorPaginationInput
        search: String
    ): DeviceConnection!

    device(machineId: String!): Machine
}

type DeviceFilters {
    statuses: [DeviceFilterOption!]!
    deviceTypes: [DeviceFilterOption!]!
    osTypes: [DeviceFilterOption!]!
    organizationIds: [DeviceFilterOption!]!
    tags: [TagFilterOption!]!
    filteredCount: Int!
}

type DeviceFilterOption {
    value: String!
    count: Int!
}

type TagFilterOption {
    value: String!
    label: String!
    count: Int!
}

input DeviceFilterInput {
    statuses: [DeviceStatus!]
    deviceTypes: [DeviceType!]
    osTypes: [String!]
    organizationIds: [String!]
    tagNames: [String!]
}

type Machine {
    id: ID!
    machineId: String!
    ip: String
    macAddress: String
    osUuid: String
    agentVersion: String
    status: DeviceStatus
    lastSeen: Instant
    organizationId: String
    hostname: String
    displayName: String
    serialNumber: String
    manufacturer: String
    model: String
    type: DeviceType
    osType: String
    osVersion: String
    osBuild: String
    timezone: String
    registeredAt: Instant
    updatedAt: Instant
    tags: [Tag]
}

type Tag {
    id: ID!
    name: String!
    description: String
    color: String
    organizationId: String!
    createdAt: Instant!
    createdBy: String!
}

enum DeviceStatus {
    ACTIVE
    INACTIVE
    MAINTENANCE
    DECOMMISSIONED,
    ONLINE, 
    OFFLINE
}

enum DeviceType {
    DESKTOP
    LAPTOP
    SERVER
    MOBILE_DEVICE
    TABLET
    NETWORK_DEVICE
    IOT_DEVICE
    VIRTUAL_MACHINE
    CONTAINER_HOST
    OTHER
}

type DeviceConnection {
    edges: [DeviceEdge!]!
    pageInfo: CursorPageInfo!
    filteredCount: Int!
}

type DeviceEdge {
    node: Machine!
    cursor: String!
}