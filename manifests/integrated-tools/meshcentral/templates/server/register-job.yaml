{{- if .Values.global.registerJob.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: meshcentral-server
  annotations:
    "argocd.argoproj.io/hook": PostSync
    "argocd.argoproj.io/hook-delete-policy": HookSucceeded
spec:
  backoffLimit: 3
  template:
    spec:
      restartPolicy: Never
      {{- if ne .Values.registry.docker.password "" }}
      imagePullSecrets:
        - name: docker-pat-secret
      {{- end }}
      
      containers:
      - name: register
        image: curlimages/curl:8.5.0
        env:
        - name: MESH_USER
          valueFrom:
            secretKeyRef:
              name: meshcentral-server
              key: MESH_USER
        - name: MESH_PASS
          valueFrom:
            secretKeyRef:
              name: meshcentral-server
              key: MESH_PASS
        - name: MONGODB_HOST
          valueFrom:
            configMapKeyRef:
              name: meshcentral-mongodb
              key: MONGODB_HOST
        - name: MONGODB_PORT
          valueFrom:
            configMapKeyRef:
              name: meshcentral-mongodb
              key: MONGODB_PORT
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: meshcentral-mongodb
              key: MONGO_INITDB_ROOT_USERNAME
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: meshcentral-mongodb
              key: MONGO_INITDB_ROOT_PASSWORD
        command:
          - /bin/sh
          - -c
          - |
            echo "Registering MeshCentral Server..."
            echo "Waiting for OpenFrame Management API to become reachable..."
            until curl --head --fail --silent http://openframe-management.microservices.svc.cluster.local:8096/management/v1/health; do
              echo "Still waiting..."
              sleep 10
            done
            curl --verbose --show-error --fail \
              -X POST "http://openframe-management.microservices.svc.cluster.local:8095/v1/tools/meshcentral-server" \
              -H "Content-Type: application/json" \
              -d '{
                "tool": {
                  "id": "meshcentral-server",
                  "toolType": "MESHCENTRAL",
                  "name": "MeshCentral Server",
                  "description": "MeshCentral Remote Management Platform",
                  "toolUrls": [
                    {
                      "url": "http://meshcentral-server.integrated-tools.svc.cluster.local",
                      "port": "80",
                      "type": "API"
                    },
                    {
                      "url": "http://meshcentral-server.integrated-tools.svc.cluster.local",
                      "port": "8383",
                      "type": "DASHBOARD"
                    },
                    {
                      "url": "ws://meshcentral-server.integrated-tools.svc.cluster.local",
                      "port": "8383",
                      "type": "WS"
                    }
                  ],
                  "category": "Device Management",
                  "platformCategory": "Integrated Tool",
                  "enabled": true,
                  "credentials": {
                    "username": "'"${MESH_USER}"'",
                    "password": "'"${MESH_PASS}"'"
                  },
                  "layer": "Integrated Tools",
                  "layerOrder": 4,
                  "layerColor": "#455A64",
                  "metricsPath": "/metrics",
                  "healthCheckEndpoint": "/",
                  "healthCheckInterval": 30,
                  "connectionTimeout": 5000,
                  "readTimeout": 5000,
                  "allowedEndpoints": ["/metrics"],
                  "debeziumConnector": {
                    "name": "meshcentral-mongo-connector",
                    "config": {
                      "connector.class": "io.debezium.connector.mongodb.MongoDbConnector",
                      "mongodb.connection.string": "mongodb://'"${MONGO_INITDB_ROOT_USERNAME}"':'"${MONGO_INITDB_ROOT_PASSWORD}"'@'"${MONGODB_HOST}"':'"${MONGODB_PORT}"'/meshcentral?replicaSet=rs0&authSource=admin",
                      "mongodb.name": "meshcentral",
                      "topic.prefix": "meshcentral",
                      "collection.include.list": "meshcentral.events",
                      "transforms": "route,addHeaders",
                      "transforms.route.type": "org.apache.kafka.connect.transforms.RegexRouter",
                      "transforms.route.regex": ".*",
                      "transforms.route.replacement": "meshcentral.mongodb.events",
                      "transforms.addHeaders.type": "org.apache.kafka.connect.transforms.InsertHeader",
                      "transforms.addHeaders.header": "message-type",
                      "transforms.addHeaders.value.literal": "MESHCENTRAL_EVENT"
                    }
                  }
                }
              }' \
              --retry-delay 2 \
              --retry-all-errors
            echo "MeshCentral Server Registration complete."

            echo "Registering MeshCentral Agent..."
            curl --verbose --show-error --fail \
              -X POST "http://openframe-management.microservices.svc.cluster.local:8095/v1/tool-agents/meshcentral-agent" \
              -H "Content-Type: application/json" \
              -d '{
                "toolAgent": {
                  "id": "meshcentral-agent",
                  "toolId": "meshcentral-server",
                  "version": "1.0",
                  "status": "ENABLED",
                  "runCommandArgs": [
                    "connect",
                    "--openframe-mode",
                    "--openframe-secret", "${client.openframeSecret}",
                    "--openframe-token-path", "${client.openframeTokenPath}"
                  ],
                  "assets": [
                    {
                      "id": "meshcentral-core-module",
                      "localFilename": "CoreModule.js"
                      "source": "ARTIFACTORY"
                    },
                    {
                      "id": "msh-configuration",
                      "localFilename": "agent.msh"
                      "source": "TOOL_API",
                      "path": "/openframe_public/meshagent.msh"
                    }
                  ]
                }
              }' \
              --retry-delay 2 \
              --retry-all-errors
            echo "MeshCentral Agent Registration complete."
{{- end }}
